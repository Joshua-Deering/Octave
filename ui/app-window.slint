import { MainUi } from "./main-ui.slint";
import { Palette } from "./colors.slint";
import { MenuButton } from "./menu-button.slint";

export component MainWindow inherits Window {
    title: "Octave";
    min-width: 960px;
    min-height: 540px;
    preferred-width: 1200px;
    preferred-height: 675px;
    property <int> current-menu: -1;

    // AUDIO PLAYER VARIABLES
    in property <[string]> player_audio_files <=> main_ui.player_audio_files;
    in property <float> file_duration <=> main_ui.file_duration;
    in-out property <bool> is_playing <=> main_ui.is_playing;
    in-out property <string> selected_file <=> main_ui.selected_file;
    in property <image> waveform_img <=> main_ui.waveform_img;

    callback init_menu <=> main_ui.init_menu;
    callback toggle_play <=> main_ui.toggle_play;
    callback file_select <=> main_ui.file_select;
    callback render_waveform <=> main_ui.render_waveform;
    callback slider_released <=> main_ui.slider_released;
    pure callback init_eq_nodes <=> main_ui.init_eq_nodes;
    pure callback set_eq <=> main_ui.set_eq;
    pure callback request_eq_response <=> main_ui.request_eq_response;
    pure callback request_eq_fill_response <=> main_ui.request_eq_fill_response;
    pure callback req_player_rta_img <=> main_ui.req_player_rta_img;

    in-out property slider_pos <=> main_ui.slider_pos;
    out property <bool> slider_pressed <=> main_ui.slider_pressed;

    // VISUALIZER VARIABLES
    callback generate_spectrogram <=> main_ui.generate_spectrogram;
    callback generate_waveform <=> main_ui.generate_waveform;

    in property <[string]> vis_audio_files <=> main_ui.vis_audio_files;
    in property <image> vis_source <=> main_ui.vis_source;
    in-out property <bool> vis_loading <=> main_ui.vis_loading;

    // REAL-TIME ANALYZER VARIABLES
    callback start_rta <=> main_ui.start_rta;
    callback stop_rta <=> main_ui.stop_rta;
    pure callback req_rta_img <=> main_ui.req_rta_img;

    // FILE ANALYZER VARIABLES
    callback analyze_file <=> main_ui.analyze_file;
    in property f_analyzer_files <=> main_ui.f_analyzer_files;
    in property cur_f_results <=> main_ui.cur_f_results;

    in-out property analyzing_file <=> main_ui.analyzing_file;
    in-out property analyzing_finished <=> main_ui.analyzing_finished;

    callback close_menu(menu: int);

    HorizontalLayout {
        Rectangle {
            background: Palette.primary;
            VerticalLayout {
                alignment: center;
                spacing: 1px;
                Rectangle {
                    MenuButton {
                        text: "Play Audio";
                        font-size: 15px;
                        bg: Palette.primary.darker(-20%);
                        btn_pressed() => {
                            if (current-menu != 0) {
                                close_menu(main_ui.cur_menu);
                                main_ui.cur_menu = 0;
                                init_menu(0);
                                current-menu = 0;
                            }
                        }
                    }
                }
                Rectangle {
                    MenuButton {
                        text: "Visualizers";
                        font-size: 15px;
                        bg: Palette.primary.darker(-20%);
                        btn_pressed() => {
                            if (current-menu != 1) {
                                close_menu(main_ui.cur_menu);
                                main_ui.cur_menu = 1;
                                init_menu(1);
                                current-menu = 1;
                            }
                        }
                    }
                }
                Rectangle {
                    MenuButton {
                        text: "Real-Time Analyzer";
                        font-size: 15px;
                        bg: Palette.primary.darker(-20%);
                        btn_pressed() => {
                            if (current-menu != 2) {
                                close_menu(main_ui.cur_menu);
                                main_ui.cur_menu = 2;
                                init_menu(2);
                                current-menu = 2;
                            }
                        }
                    }
                }
                Rectangle {
                    MenuButton {
                        text: "File Analyzer";
                        font-size: 15px;
                        bg: Palette.primary.darker(-20%);
                        btn_pressed() => {
                            if (current-menu != 3) {
                                close_menu(main_ui.cur_menu);
                                main_ui.cur_menu = 3;
                                init_menu(3);
                                current-menu = 3;
                            }
                        }
                    }
                }
            }
        }
        
        main_ui := MainUi {
            cur_menu: 0;
        }
    }
}
